version: '3.8'

services:
  app:
    image: todo-frontend-dev
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3000:3000
    environment:
        - REACT_APP_BACKEND_URL=http://localhost:8080/api
        - PORT=3000
    container_name: todo-front-dev # This will name the container hello-front-dev

  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database

    volumes: 
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
    container_name: mongo-app

  redis:
    image: redis
    ports:
      - 6378:6379
    volumes:
      - ./todo-backend/redis_data:/data
    container_name: redis-app

  server:
    image: todo-backend-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
    ports:
      - 3001:3000
    environment: 
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      - REDIS_URL=redis://redis:6379
    container_name: todo-backend-dev-app
    depends_on:
      - mongo
      - redis

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - server
      
volumes:
  mongo_data: